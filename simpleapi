#!/bin/bash

outstart="<simpleapi>"
outend="</simpleapi>"
currentuser=$(whoami)
case "$1" in
    clusterinfo)
        echo $outstart
        echo "<clusterinfo>"
        echo "<maxnodes>348</maxnodes>"
        echo "<maxcpus>8</maxcpus>"
        echo "<partitions>"
        for partition in "core" "node" "devel"; do
            echo "<partition>$partition</partition>"
        done;
        echo "</partitions>"
        echo "</clusterinfo>"
        echo $outend
        ;;
    projinfo)
        echo $outstart;
        echo "<projinfo>";
        projinfo_tmpfile="/tmp/projinfo_$(date +%Y%m%d%H)"
        if [[ ! -f $projinfo_tmpfile ]]; then
            projinfo $currentuser > $projinfo_tmpfile;
        fi;
        firstgroupinfo=true;
        for line in $(cat $projinfo_tmpfile|tr " " "_"); do
            groupinfo_start=$(echo $line|grep -P "\-{10,100}")
            if $firstgroupinfo && [[ -n $groupinfo_start ]]; then
                echo "<groupinfo>";
                firstgroupinfo=false;
            elif [[ !$firstgroupinfo && -n $groupinfo_start ]]; then
                echo "</groupinfo>";
                echo "<groupinfo>";
            fi;
            # Output the info for the group as a whole
            echo $line|grep -P "^[a-z]+\_*[0-9]+\_*[0-9]+"|sed -r 's|([a-z]+[0-9]+)\_+([0-9]+\.[0-9]+)\_+([0-9]+)|<name>\1</name><time>\2</time><allocation>\3</allocation>|g'
            # Output info for each user in the group
            echo $line|grep -P "^\_+[a-z]+\_*[0-9]+\_*[0-9]+"|sed -r 's|\_+([a-z]+)\_+([0-9]+\.[0-9]+)(\_+([0-9]+))?|<user><name>\1</name><time>\2</time><allocation>\4</allocation></user>|g'
        done;
        echo "</groupinfo>"
        echo "</projinfo>"
        echo $outend
        ;;
    jobinfo)
        echo $outstart
        echo "<jobinfo>"
        echo "<jobs>"
        squeue --noheader --user=$currentuser --format="<job id=\"%i\" partition=\"%P\" name=\"%j\" username=\"%u\" state=\"%T\" time_elapsed=\"%M\" nodescnt=\"%D\" nodelist=\"%R\">"
        echo "</jobs>"
        echo "</jobinfo>"
        echo $outend
        ;;
    userinfo)
        echo $outstart
        echo "<userinfo>"
        echo "<username>$currentuser</username>"
        echo "<projects>"
        for proj in $(groups|tr " " "\n"|grep -P "^([abgps][0-9]|staff)"); do
            echo "<project>$proj</project>"
        done;
        echo "</userinfo>"
        echo "</projects>"
        echo $outend
        ;;
    *)
       echo "Usage: $0 {clusterinfo|projinfo|jobinfo|userinfo}"
       exit 1
esac
